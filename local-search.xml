<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>pytorch深度学习2: Tensorboard的使用</title>
    <link href="/2023/08/09/pytorch%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A02-Tensorboard%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/08/09/pytorch%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A02-Tensorboard%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>###源代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> torch.utils.tensorboard <span class="hljs-keyword">import</span> SummaryWriter<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>writer = SummaryWriter(<span class="hljs-string">&quot;logs&quot;</span>)<br>image_path = <span class="hljs-string">&quot;data/train/ants_image/6240329_72c01e663e.jpg&quot;</span><br>img_PIL = Image.<span class="hljs-built_in">open</span>(image_path)<br>img_array = np.array(img_PIL)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(img_array))<br><span class="hljs-built_in">print</span>(img_array.shape)<br><br>writer.add_image(<span class="hljs-string">&quot;train&quot;</span>, img_array, <span class="hljs-number">1</span>, dataformats=<span class="hljs-string">&#x27;HWC&#x27;</span>)  <span class="hljs-comment"># 此处注意dataformats需要和图片的对应</span><br><span class="hljs-comment"># y = 2x</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>):<br>    writer.add_scalar(<span class="hljs-string">&quot;y=2x&quot;</span>, <span class="hljs-number">3</span>*i, i)<br><br>writer.close()<br></code></pre></td></tr></table></figure><p>###流程<br>创建 SummaryWriter 类，传入 logs 文件输出地址<br>图片文件地址<br>Image 类打开图片文件<br>将 Image 类转换 numpy 格式<br>SummaryWriter 类加载 numpy 格式图片<br>画图<br>关闭 SummaryWriter 流</p><p>###运行方式<br>打开 anaconda prompt，输入</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">conda <span class="hljs-built_in">activate</span> pytorch<br></code></pre></td></tr></table></figure><p>进入 pytorch 环境下 ，输入</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">tensorboard <span class="hljs-params">--logdir</span> <span class="hljs-string">&quot;文件夹绝对地址&quot;</span> <span class="hljs-params">--port=6007</span><span class="hljs-params">(optional)</span><br></code></pre></td></tr></table></figure><p>然后进入 <a href="http://localhost:6006/">http://localhost:6006/</a> 查看图片和曲线</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>pytorch深度学习1：Dataset类</title>
    <link href="/2023/08/09/pytorch%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A01%EF%BC%9ADataset%E7%B1%BB/"/>
    <url>/2023/08/09/pytorch%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A01%EF%BC%9ADataset%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<p>来自于 b 站《PyTorch 深度学习快速入门教程（绝对通俗易懂！）【小土堆】》</p><p>本篇内容主要是对代码中的一些小知识点进行归纳总结，以便复习</p><p>下面是主要代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> torch.utils.data <span class="hljs-keyword">import</span> Dataset    <span class="hljs-comment">#引入Dataset类</span><br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> os<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyData</span>(<span class="hljs-title class_ inherited__">Dataset</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,root_dir,label_dir</span>):  <span class="hljs-comment">#属性</span><br><br>        self.root_dir=root_dir<br>        self.label_dir=label_dir<br>        self.path=os.path.join(self.root_dir,self.label_dir)<br>        self.img_path=os.listdir(self.path)     <span class="hljs-comment">#返回路径指定的文件夹包含的文件或文件夹的名字的列表</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__getitem__</span>(<span class="hljs-params">self, idx</span>):     <span class="hljs-comment">#方法</span><br><br>        img_name=self.img_path[idx]<br>        img_item_path=os.path.join(self.root_dir,self.label_dir,img_name) <span class="hljs-comment">#实现路径组合</span><br>        img=Image.<span class="hljs-built_in">open</span>(img_item_path)<br>        label=self.label_dir<br>        <span class="hljs-keyword">return</span> img, label<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__len__</span>(<span class="hljs-params">self</span>):              <span class="hljs-comment">#获取列表的长度</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">len</span>(self.img_path)<br><span class="hljs-comment">#实际运行</span><br>root_dir=<span class="hljs-string">&quot;dataset/train&quot;</span><br>ants_label_dir=<span class="hljs-string">&quot;ants_image&quot;</span><br>ants_dataset=MyData(root_dir,ants_label_dir)<br>target_dir=<span class="hljs-string">&quot;ants_image&quot;</span><br>label=target_dir.split(<span class="hljs-string">&#x27;_&#x27;</span>)[<span class="hljs-number">0</span>]<br>img_path=os.listdir(os.path.join(root_dir,target_dir))<br>out_dir=<span class="hljs-string">&quot;ants_label&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> img_path:<br>    file_name=i.split(<span class="hljs-string">&#x27;.jpg&#x27;</span>)[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(os.path.join(root_dir,out_dir,<span class="hljs-string">&quot;&#123;&#125;.txt&quot;</span>.<span class="hljs-built_in">format</span>(file_name)),<span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        f.write(label)<br>        <span class="hljs-comment"># 写文件操作，将标签写入root_dir/out_dir并创建txt文件，文件内容为label</span><br>        <span class="hljs-comment"># &#x27;w&#x27;: 打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</span><br></code></pre></td></tr></table></figure><p>另外，配环境配了好久。。。</p>]]></content>
    
    
    
    <tags>
      
      <tag>PyTorch</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>欢迎来到小何同学的博客！</title>
    <link href="/2023/08/06/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E5%B0%8F%E4%BD%95%E5%90%8C%E5%AD%A6%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%81/"/>
    <url>/2023/08/06/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E5%B0%8F%E4%BD%95%E5%90%8C%E5%AD%A6%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%81/</url>
    
    <content type="html"><![CDATA[<p>大家好，我是何昊宇，现就读于南京大学</p><p>目前主要研究兴趣是 CV 和 DL</p><p>在这里我将分享我的学习笔记与心得体会</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
